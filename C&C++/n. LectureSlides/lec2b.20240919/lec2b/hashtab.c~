#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define TABLE_SIZE 7

typedef struct {
  char name[40];
  int age;
} Person;

static Person *people[TABLE_SIZE];

int hash (char *key) {
  int hashidx = 0;
  char *workingKey = key;
  if (strlen(key) > 40) {
    return 0;
  } else {
    for (int i = 0; i < strlen(key); i++) {
      hashidx = ((hashidx << 1) + *workingKey++) % TABLE_SIZE;
    }
  }
  return hashidx;
}

int addToTable(char *key, Person *data) {
  int hashIdx = hash(key);

  Person *tempPerson = (Person *) malloc(sizeof(Person));

  // ->    (*tempPerson).name
  strncpy(tempPerson->name, data->name, 40);
  tempPerson->age = data->age;

  while (people[hashIdx] != 0) {
    hashIdx = (hashIdx + 1) % TABLE_SIZE;
  }
  people[hashIdx] = tempPerson;
  return hashIdx;
}



int main(int argc, char **argv) {
  char *first = "Antonino";
  char *second = "Antonio";

  printf("Hash(Antonino) = %d\n", hash(first));
  printf("Hash(Antonio) = %d\n", hash(second));
  
}


